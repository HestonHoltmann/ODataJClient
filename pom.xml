<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2013 Microsoft Open Technologies, Inc.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <packaging>pom</packaging>

  <groupId>com.msopentech.odatajclient</groupId>
  <artifactId>odatajclient</artifactId>
  <version>M2-SNAPSHOT</version>
  <name>Client OData libray for Java</name>
  <description>Java client API for OData 3.0 services</description>

  <url>https://github.com/MSOpenTech/ODataJClient</url>
  
  <inceptionYear>2013</inceptionYear>
  
  <organization>
    <name>MS OpenTech</name>
    <url>http://msopentech.com/</url>
  </organization>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <scm>
    <url>https://github.com/MSOpenTech/ODataJClient.git</url>
    <connection>scm:git:git@github.com:MSOpenTech/ODataJClient.git</connection>
    <developerConnection>scm:git:git@github.com:MSOpenTech/ODataJClient.git</developerConnection>
    <tag>HEAD</tag>
  </scm>

  <prerequisites>
    <maven>[3.0.3,)</maven>
  </prerequisites>
  
  <properties>
    <targetJdk>1.6</targetJdk>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    
    <hc.client.version>4.2.5</hc.client.version>
    <jackson.version>2.2.2</jackson.version>
    
    <commons.io.version>2.4</commons.io.version>
    <commons.lang3.version>3.1</commons.lang3.version>

    <sl4j.version>1.7.5</sl4j.version>
    <logback.version>1.0.13</logback.version>
    
    <maven.test.skip>true</maven.test.skip>
  </properties>
  
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>${commons.io.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>${commons.lang3.version}</version>
      </dependency>
    
      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpclient</artifactId>
        <version>${hc.client.version}</version>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${jackson.version}</version>
      </dependency>
    
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${sl4j.version}</version>
      </dependency>

      <dependency> 
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${logback.version}</version>
        <scope>test</scope>
      </dependency>      
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.11</version>
        <scope>test</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.1</version>
          <configuration>
            <source>${targetJdk}</source>
            <target>${targetJdk}</target>
            <showWarnings>true</showWarnings>
            <showDeprecation>true</showDeprecation>
            <!--<compilerArgument>-Xlint:unchecked</compilerArgument>-->
          </configuration>
        </plugin>
        
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>1.2</version>
        </plugin>
        
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.14.1</version>
          <configuration>
            <redirectTestOutputToFile>true</redirectTestOutputToFile>
            <encoding>utf-8</encoding>
            <runOrder>alphabetical</runOrder>
          </configuration>
        </plugin>
        
        <!-- mvn release:prepare && mvn release:perform -Dgoals=install -->      
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>2.3.2</version>
          <configuration>
            <mavenExecutorId>forked-path</mavenExecutorId>
            <autoVersionSubmodules>true</autoVersionSubmodules>
            <tagNameFormat>odatajclient-@{project.version}</tagNameFormat>
          </configuration>
        </plugin>
      </plugins> 
    </pluginManagement>
    
    <plugins>
      <plugin>
        <groupId>org.apache.rat</groupId>
        <artifactId>apache-rat-plugin</artifactId>
        <version>0.9</version>
        <configuration>
          <excludes>
            <exclude>nbactions.xml</exclude>
            <exclude>nb-configuration.xml</exclude>
            <exclude>**/META-INF/services/**</exclude>
            <exclude>**/META-INF/MANIFEST.MF</exclude>
            <exclude>**/*.css</exclude>
            <exclude>**/*.js</exclude>
            <exclude>**/*.csv</exclude>
            <exclude>**/archetype-resources/**</exclude>
            <exclude>**/goal.txt</exclude>
            <exclude>**/rat.txt</exclude>
            <exclude>**/build-copy-javadoc-files.xml</exclude>
            <exclude>**/maven-eclipse.xml</exclude>
            <exclude>**/*.iml</exclude>
            <exclude>**/*.log</exclude>
            <exclude>.externalToolBuilders/**</exclude>
            <exclude>.git/**</exclude>
            <exclude>.idea/**</exclude>
            <exclude>**/.*</exclude>
            <exclude>yworks*/**</exclude>
          </excludes>
        </configuration>
        <executions>
          <execution>
            <phase>verify</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      
      <!-- Put NOTICE and LICENSE files in all javadoc artifacts -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.6</version>
        <executions>
          <execution>
            <id>copy-javadoc-legal-files</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/apidocs/META-INF</outputDirectory>
              <resources>
                <resource>
                  <directory>..</directory>
                  <includes>
                    <include>LICENSE</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>ianal-maven-plugin</artifactId>
        <version>1.0-alpha-1</version>
        <executions>
          <execution>
            <goals>
              <goal>verify-legal-files</goal>
            </goals>
            <configuration>
              <!-- Fail the build if any artifacts are missing legal files -->
              <strict>true</strict>
              <requiredFiles>
                <requiredFile>LICENSE</requiredFile>
              </requiredFiles>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>javadoc</id>
      
      <properties>
        <yworks.uml.path>${basedir}/yworks-uml-doclet-3.0_02-jdk1.5</yworks.uml.path>
      </properties>
      
      <build>
        <defaultGoal>clean verify javadoc:aggregate</defaultGoal>
        
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>2.9.1</version>
            <configuration>
              <!-- Doclet -->
              <doclet>ydoc.doclets.YStandard</doclet>
              <docletPath>${yworks.uml.path}/lib/ydoc.jar:${yworks.uml.path}/lib/class2svg.jar:${yworks.uml.path}/resources</docletPath>
              <additionalparam>-umlautogen -umlfileformat SVG</additionalparam>

              <!-- bootclasspath required by Sun's JVM -->
              <bootclasspath>${sun.boot.class.path}</bootclasspath>
              <!-- General Javadoc settings -->
              <doctitle>${project.name} (${project.version})</doctitle>
              <verbose>true</verbose>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    
    <profile>
      <id>test</id>
      
      <properties>
        <maven.test.skip>false</maven.test.skip>
      </properties>
      
      <build>
        <defaultGoal>clean verify</defaultGoal>
        
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <inherited>true</inherited>
            <executions>
              <execution>
                <id>enforce-property</id>
                <goals>
                  <goal>enforce</goal>
                </goals>
                <configuration>
                  <rules>
                    <requireProperty>
                      <property>test.odata.serviceroot.url</property>
                      <message>You must set 'test.odata.serviceroot.url' property!</message>
                      <regex>http(s)?://.*</regex>
                      <regexMessage>The test.odata.serviceroot.url property must be a valid HTTP(S) URL.</regexMessage>
                    </requireProperty>
                  </rules>
                  <fail>true</fail>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <modules>
    <module>engine</module>
    <module>proxy</module>
  </modules>
  
</project>
